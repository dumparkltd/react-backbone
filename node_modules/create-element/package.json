{
  "name": "create-element",
  "description": "HTML element string creator",
  "version": "0.2.3",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/component/create-element.git"
  },
  "bugs": {
    "url": "https://github.com/component/create-element/issues",
    "email": "me@jongleberry.com"
  },
  "license": "MIT",
  "scripts": {
    "test": "node test"
  },
  "readme": "# Create Element [![Build Status](https://travis-ci.org/component/create-element.png)](https://travis-ci.org/component/create-element)\n\nProgramatically create an HTML string.\n\n```js\nvar createElement = require('create-element')\n\ncreateElement('a', {\n  id: 'user-link',\n  href: '#',\n  class: {\n    yes: true,\n    no: false,\n    'maybe-so': true\n  },\n  'data-id': user.id\n}, user.name)\n```\n\nyields:\n\n```html\n<a id=\"user-link\" href=\"#\" class=\"yes maybe-so\" data-id=\"jonathanong\">Jonathan Ong</a>\n```\n## API\n\n### createElement(tagName, [attributes], [innerHTML])\n\n#### Output\n\n`HTML` [String]\n\n#### Input\n\n* `tagName` [string] - tag name of the element. ie `'div'` or `'blockquote'`\n* `attributes` [object] - object of attribute keys and values.\n  See `createElement.attributes` for more details.\n* `innerHTML` [function || string] - element's `innerHTML`.\n  If a function, evaluates the function within `createElement.element`'s current context, ie `fn.call(this, '')`.\n\n```js\nvar html = createElement('a', {\n  href: '#'\n}, function (html) {\n  // html === ''\n  html += user.name\n\n  return html\n})\n```\n\nBoth `attributes` and `innerHTML` are optional via type checking.\nIf there is no `innerHTML`, the element will not be self closed depending on `tagName`.\n\n### createElement.attributes(attributes)\n\n`attributes` is an object with attribute keys and values.\nEach `attributes.value` can be:\n\n* `[string]` - Simply returns a string\n* `[array]` - Removes the \"falsey\" strings and `[].join(' ')` the strings\n* `[object]` - Removes the keys with \"falsey\" values and `[].join(' ')`s the keys\n\n```js\ncreateElement.attributes({\n  id: [\n    '1',\n    '2',\n    false,\n    null,\n    '5'\n  ],\n  class: {\n    yes: true,\n    no: false,\n    'maybe-so'; true\n  },\n  href: 'some string'\n})\n```\n\nyields:\n\n```js\n' id=\"1 2 5\" class=\"yes maybe-so\" href=\"some string\"'\n```\n\n### createElement.selfClosingTags\n\n```js\ncreateElement.selfClosingTags = {\n  meta: true,\n  img: true,\n  link: true,\n  input: true,\n  source: true,\n  area: true,\n  base: true,\n  col: true,\n  br: true,\n  hr: true\n}\n```\n\n### createElement.openingTag(tagName, [attributes])\n\n### createElement.closingTag(tagName)\n\n## Browser Support\n\nIE9+\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/component/create-element",
  "_id": "create-element@0.2.3",
  "_from": "create-element@*"
}
